#pragma kernel CSMain
#include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl"
#include "Packages/com.unity.render-pipelines.universal/ShaderLibrary/Lighting.hlsl"
TEXTURE2D_ARRAY(_Diffuse);
SAMPLER(sampler_Diffuse);
TEXTURE2D_ARRAY(_Normal);
SAMPLER(sampler_Normal);
RWTexture2D<float4> SkyboxTex;
int FaceIndex;
int Resolution;
uniform float4 shArray[7];
half4 AHD2_MainlightColor;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float2 invTextureSize = rcp(float2(Resolution, Resolution));
    float2 uv = (float2(id.xy) + 0.5) * invTextureSize;
    float4 col = SAMPLE_TEXTURE2D_ARRAY_LOD(_Diffuse, sampler_Diffuse, uv, FaceIndex, 0);//a通道为遮罩
    col.xyz *= 20;//强行转hdr
    //SkyboxTex[id.xy] = float4(col.xyz, 1);
    col.a = min(1, col.a * 2);
    float4 normal = SAMPLE_TEXTURE2D_ARRAY_LOD(_Normal, sampler_Normal, uv, FaceIndex, 0) * 2 - 1;
    half3 SHcol = SampleSH9(shArray, normal.xyz);
    half NoL = dot(_MainLightPosition, normal);
    half halflambert = NoL * 0.5 + 0.5;
    col.xyz *= halflambert * AHD2_MainlightColor.xyz;
    col.xyz = lerp(SHcol, col.xyz, halflambert);
    float4 finalcol = lerp(SkyboxTex[id.xy], col, col.a);
    SkyboxTex[id.xy] = float4(finalcol.xyz, 1);
}
